DROP TABLE CUSTOMER10;
DROP TABLE AUTO_POLICY;
DROP TABLE HOME_POLICY;
DROP TABLE POLICY;



CREATE TABLE POLICY
  (P_NO        NUMBER(30) NOT NULL,
   PRICE       NUMBER(30),
   COVERAGE    NUMBER(30)
);

ALTER TABLE POLICY ADD CONSTRAINT PKP PRIMARY KEY(P_NO);



CREATE TABLE CUSTOMER10
  (CUST_ID         NUMBER(12),
   POL_NO          NUMBER(12),
   NAME            VARCHAR2(15),
   ADDRESS         VARCHAR2(35),
   PHONE           NUMBER(18)
);
ALTER TABLE CUSTOMER10 ADD CONSTRAINT PKCUS PRIMARY KEY(CUST_ID);
ALTER TABLE CUSTOMER10 ADD CONSTRAINT FKCUS FOREIGN KEY(POL_NO) REFERENCES POLICY(P_NO);


CREATE TABLE AUTO_POLICY 
  (POL_NO                 NUMBER(12) NOT NULL,
   VEHICLE_NO             VARCHAR2(12) NOT NULL,
   MODEL                  VARCHAR2(15),
   ISSUE_DATE             DATE,
   TYPE                   VARCHAR2(12)
);

ALTER TABLE AUTO_POLICY ADD CONSTRAINT PKAP PRIMARY KEY(POL_NO);
ALTER TABLE AUTO_POLICY ADD CONSTRAINT FKAP FOREIGN KEY(POL_NO) REFERENCES POLICY(P_NO);




CREATE TABLE HOME_POLICY 
  (POL_NO                 NUMBER(12) NOT NULL,
   HOUSE_NO               VARCHAR2(20) UNIQUE,
   OWNER_NAME             VARCHAR2(15),
   ISSUE_DATE             DATE
);

ALTER TABLE HOME_POLICY ADD CONSTRAINT PKHP PRIMARY KEY(POL_NO);
ALTER TABLE HOME_POLICY ADD CONSTRAINT FKHP FOREIGN KEY(POL_NO) REFERENCES POLICY(P_NO);

DESCRIBE POLICY;
DESCRIBE CUSTOMER10;
DESCRIBE AUTO_POLICY;
DESCRIBE HOME_POLICY;

DESCRIBE POLICY;


--Lab-3 ALTERNATION

ALTER TABLE POLICY ADD TERM_PRICE NUMBER(30);

DESCRIBE POLICY;

DESCRIBE CUSTOMER10;

ALTER TABLE CUSTOMER10 MODIFY POL_NO NUMBER(30);

DESCRIBE CUSTOMER10;

DESCRIBE AUTO_POLICY;

ALTER TABLE AUTO_POLICY DROP COLUMN TYPE;

DESCRIBE AUTO_POLICY;

ALTER TABLE AUTO_POLICY ADD TYPE VARCHAR(12);

DESCRIBE AUTO_POLICY;

DESCRIBE HOME_POLICY;

ALTER TABLE HOME_POLICY RENAME COLUMN HOUSE_NO TO H_NO;

DESCRIBE HOME_POLICY;

--INSERTION OF ATTRIBUTES IN THE TABLE

INSERT INTO POLICY VALUES (5342,30000,3344,380);
INSERT INTO POLICY VALUES (5372,90000,8765,230);
INSERT INTO POLICY VALUES (6322,88000,8665,380);
INSERT INTO POLICY VALUES (5571,78000,9665,380);
INSERT INTO POLICY VALUES (6228,82000,3565,380);
INSERT INTO POLICY VALUES (5842,20000,4765,220);
INSERT INTO POLICY VALUES (5442,87000,3520,320);
INSERT INTO POLICY VALUES (3341,29000,4369,280);

INSERT INTO AUTO_POLICY VALUES (5342,'C-4455','BMW','22-MAY-2015','CAR');
INSERT INTO AUTO_POLICY VALUES (5571,'D-4235','SUV','25-JUN-2014','JEEP');
INSERT INTO AUTO_POLICY VALUES (6228,'E-2375','ALLION','12-OCT-2014','CAR');
INSERT INTO AUTO_POLICY VALUES (5442,'U-2375','ALLION','12-NOV-2011','JEEP');




INSERT INTO HOME_POLICY VALUES (5842,'14/8-MIRPUR-10','MR.RAHIM','15-AUG-2015');
INSERT INTO HOME_POLICY VALUES (5372,'44/3-KAZIPARA','MR.RAHMAN','25-MAY-2014');
INSERT INTO HOME_POLICY VALUES (6322,'31/9-PAIKPARA','MR.RAFIQ','2-FEB-2013');
INSERT INTO HOME_POLICY VALUES (3341,'3/9-DHANMONDI','MRS.SULTANA','2-FEB-2013');



INSERT INTO CUSTOMER10 VALUES (123,5842,'MR.RAHIM','14/8-MIRPUR-10',016442000);
INSERT INTO CUSTOMER10 VALUES (114,5342,'MR.KHALIL','23/9-MIRPUR-2',017492030);
INSERT INTO CUSTOMER10 VALUES (319,6322,'MR.RAFIQ','31/9-PAIKPARA',017219239);
INSERT INTO CUSTOMER10 VALUES (193,5442,'MR.AHIMS','8/9-PANTHOPATH',016841200);
INSERT INTO CUSTOMER10 VALUES (134,3341,'MRS.SULTANA','3/9-DHANMONDI',019492030);



SELECT * FROM CUSTOMER10;
SELECT * FROM AUTO_POLICY;
SELECT * FROM HOME_POLICY;
SELECT * FROM POLICY;


--DELETION

DELETE FROM AUTO_POLICY WHERE POL_NO=6228;

SELECT * FROM AUTO_POLICY;

DELETE FROM POLICY WHERE P_NO=6228;

SELECT * FROM POLICY;



--LAB-4 SELECT OPERATION AND AGGREGATE FUNCTION STARTS


--SELECT OPERATION

SELECT DISTINCT (P_NO) FROM POLICY;

SELECT (COVERAGE/12) AS COVERAGE_IN_A_YEAR FROM POLICY;


--COMPARISION SEARCH

SELECT OWNER_NAME FROM HOME_POLICY WHERE ISSUE_DATE='2-FEB-2013';

--AND OR ETC AND COMPOUND COMPARISION

SELECT P_NO FROM POLICY WHERE TERM_PRICE>30000 AND TERM_PRICE<40000;

--BETWEEN
SELECT P_NO FROM POLICY WHERE TERM_PRICE NOT BETWEEN 30000 AND 40000;

--IN OPERATION
SELECT NAME FROM CUSTOMER10 WHERE CUST_ID IN(123,114);

--PATTERN MATCHING
SELECT POL_NO FROM AUTO_POLICY WHERE TYPE LIKE '%JEEP%';

--ORDER BY

SELECT POL_NO,OWNER_NAME,H_NO FROM HOME_POLICY ORDER BY POL_NO;
SELECT POL_NO,OWNER_NAME,H_NO FROM HOME_POLICY ORDER BY POL_NO DESC;

--AGGREGATE FUNCTIONS

SELECT COUNT(*),SUM(PRICE),AVG(TERM_PRICE),MAX(COVERAGE),MIN(COVERAGE) FROM POLICY;



--LAB-5 SUBQUERY AND SET OPERATIONS



--SUBQUERY

SELECT OWNER_NAME,H_NO FROM HOME_POLICY WHERE POL_NO IN (SELECT P_NO FROM POLICY WHERE TERM_PRICE<40000);

--QUERY

SELECT V.VEHICLE_NO,V.TYPE,V.MODEL FROM AUTO_POLICY V,POLICY P WHERE V.POL_NO=P.P_NO;

--UNION OPERATION

SELECT P_NO,TERM_PRICE FROM POLICY WHERE TERM_PRICE>40000 UNION SELECT P.P_NO,P.TERM_PRICE FROM POLICY P WHERE P.P_NO IN (SELECT Q.P_NO FROM POLICY Q,AUTO_POLICY A WHERE Q.P_NO=A.POL_NO);

--UNION ALL OPERATION

SELECT P_NO,TERM_PRICE FROM POLICY WHERE TERM_PRICE<40000 UNION ALL SELECT P.P_NO,P.TERM_PRICE FROM POLICY P WHERE P.P_NO IN (SELECT Q.P_NO FROM POLICY Q,AUTO_POLICY A WHERE Q.P_NO=A.POL_NO);

--INTERSECT OPERATION

SELECT P_NO,TERM_PRICE FROM POLICY WHERE TERM_PRICE<40000 INTERSECT SELECT P.P_NO,P.TERM_PRICE FROM POLICY P WHERE P.P_NO IN (SELECT Q.P_NO FROM POLICY Q,AUTO_POLICY A WHERE Q.P_NO=A.POL_NO);

--MINUS OPERATION

SELECT P_NO,TERM_PRICE FROM POLICY WHERE TERM_PRICE<40000 MINUS SELECT P.P_NO,P.TERM_PRICE FROM POLICY P WHERE P.P_NO IN (SELECT Q.P_NO FROM POLICY Q,AUTO_POLICY A WHERE Q.P_NO=A.POL_NO);


--LAB-6 JOIN OPERATIONS


--JOIN

SELECT P.P_NO,C.CUST_ID FROM POLICY P JOIN CUSTOMER10 C ON P.P_NO=C.POL_NO;

SELECT P_NO,TERM_PRICE,PRICE,CUST_ID,NAME FROM POLICY JOIN CUSTOMER10 ON POLICY.P_NO=CUSTOMER10.POL_NO;  

--NATURAL JOIN OPERATION

SELECT POLICY.P_NO,POLICY.TERM_PRICE,POLICY.PRICE,POLICY.COVERAGE,CUSTOMER10.NAME FROM POLICY NATURAL JOIN CUSTOMER10; 

--CROSS JOIN OPERATION

SELECT P.P_NO,C.NAME FROM POLICY P CROSS JOIN CUSTOMER10 C;

-- USING CLAUSE
SELECT C.CUST_ID,C.NAME FROM CUSTOMER10 C JOIN AUTO_POLICY USING(POL_NO);

--MULTIPLE CONDITION

SELECT C.CUST_ID,C.NAME,A.POL_NO FROM CUSTOMER10 C JOIN HOME_POLICY A ON ((C.POL_NO=A.POL_NO) AND (C.NAME=A.OWNER_NAME));

--OUTER JOINS

SELECT P.P_NO,C.CUST_ID FROM POLICY P LEFT OUTER JOIN CUSTOMER10 C ON P.P_NO=C.POL_NO;

SELECT P.P_NO,C.CUST_ID FROM POLICY P RIGHT OUTER JOIN CUSTOMER10 C ON P.P_NO=C.POL_NO;
 

 
 
--LAB-7  PL/SQL STARTS


--PL/SQL

SET  SERVEROUTPUT ON
DECLARE
  CUS CUSTOMER10.NAME%TYPE;
  PHN_NO CUSTOMER10.PHONE%TYPE;
  ID CUSTOMER10.CUST_ID%TYPE;
  
BEGIN
  ID:=&ID;
  SELECT NAME INTO CUS  FROM CUSTOMER10 WHERE CUSTOMER10.CUST_ID=ID;
  SELECT PHONE INTO PHN_NO FROM CUSTOMER10 WHERE CUSTOMER10.CUST_ID=ID;
    
  
  DBMS_OUTPUT.PUT_LINE('THE CONTACT NUMBER OF ' || CUS || ' IS ' || PHN_NO);
END;
/

--LAB-8 CURSOR,FUNCTION,PROCEDURE


--CURSOR

SET SERVEROUTPUT ON
DECLARE
     CURSOR CUST_CUR IS
  SELECT NAME,ADDRESS,PHONE FROM CUSTOMER10;
  RECORD CUST_CUR%ROWTYPE;

BEGIN

OPEN CUST_CUR;
     
      LOOP
        FETCH CUST_CUR INTO RECORD;
        EXIT WHEN CUST_CUR%ROWCOUNT >3;
      DBMS_OUTPUT.PUT_LINE ('ARTIST NAME : ' || RECORD.NAME || ' GENDER : ' || RECORD.ADDRESS || 'PHONE NO-' || RECORD.PHONE);
	  END LOOP;
      CLOSE CUST_CUR;   
END;
/

-- FUNCTIONS


CREATE OR REPLACE FUNCTION GET_OWNER(HOUSE_NO HOME_POLICY.H_NO%TYPE) RETURN VARCHAR IS
NAME HOME_POLICY.OWNER_NAME%TYPE;

BEGIN

SELECT OWNER_NAME INTO NAME FROM HOME_POLICY WHERE HOME_POLICY.H_NO=HOUSE_NO;
RETURN NAME;
END;
/

SET SERVEROUTPUT ON
DECLARE
HOUSE_NO HOME_POLICY.H_NO%TYPE;
BEGIN
HOUSE_NO:=&HOUSE_NO;
DBMS_OUTPUT.PUT_LINE('OWNER NAME OF THIS HOUSE'|| GET_OWNER(HOUSE_NO) );
END;
/



--PROCEDURE TO COUNT TIME
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE TIME_COUNT(POLD AUTO_POLICY.POL_NO%TYPE) IS 
PRC AUTO_POLICY.ISSUE_DATE%TYPE;
V_DATE1 DATE := SYSDATE;


DIFF INTEGER;

BEGIN
  
  SELECT ISSUE_DATE INTO PRC FROM AUTO_POLICY
 WHERE POL_NO=POLD;
  
    DIFF    := (V_DATE1 - PRC);
       DBMS_OUTPUT.PUT_LINE('DIFF  : ' || DIFF ||' DAYS');
	IF(DIFF>3600)
	THEN
	    DBMS_OUTPUT.PUT_LINE('RENEW YOUR POLICY,TIME IS OVER'); 
END IF;
END;
/

BEGIN
TIME_COUNT(5571);
END;
/


--PROCEDURE TO MATCH COVERAGE AND PRICE


CREATE OR REPLACE PROCEDURE MATCH_PRICE(POLICID POLICY.P_NO%TYPE) IS 
PRC POLICY.COVERAGE%TYPE;
PTC POLICY.TERM_PRICE%TYPE;

BEGIN
SELECT COVERAGE INTO PRC FROM POLICY
WHERE P_NO=POLICID;

SELECT TERM_PRICE INTO PTC FROM POLICY
WHERE P_NO=POLICID;

PRC:=PRC+PTC;
UPDATE POLICY SET COVERAGE=PRC WHERE
P_NO=POLICID;
COMMIT;
END MATCH_PRICE;
/
SELECT *FROM POLICY;

--LAB-10 TRIGGER,DATE,TRANSACTION

--TRIGGER

CREATE OR REPLACE TRIGGER CHECK_CVR
BEFORE UPDATE ON POLICY
FOR EACH ROW
DECLARE
PRC POLICY.P_NO%TYPE;
CVR POLICY.COVERAGE%TYPE;

BEGIN

CVR:= :NEW.COVERAGE;
PRC:= :OLD.PRICE;
IF PRC = CVR THEN
DBMS_OUTPUT.PUT_LINE('EQUAL');
END IF;
END;
/

BEGIN
NP5(5372);
END;
/
SELECT *FROM POLICY;

INSERT INTO POLICY VALUES(34,1000,500,500);
BEGIN
NP5(34);
END;
/


--DATE

select sysdate from dual;

select current_date from dual;

select systimestamp from dual;

--extract

select POL_NO,extract(MONTH from ISSUE_DATE) as months from AUTO_POLICY;

--extract continues

select POL_NO,extract(year from ISSUE_DATE) as year from HOME_POLICY;


--TRANSACTION

INSERT INTO POLICY VALUES (5972,73000,9615,280);

SAVEPOINT T1;

INSERT INTO POLICY VALUES (6528,82000,3565,320);

SAVEPOINT T2;

SELECT * FROM POLICY;

ROLLBACK TO SAVEPOINT T1;

DELETE FROM POLICY WHERE P_NO =6528;

COMMIT;

SELECT * FROM POLICY;

ROLLBACK TO SAVEPOINT T2;

INSERT INTO POLICY VALUES (5242,20000,4765,420);

ROLLBACK;

